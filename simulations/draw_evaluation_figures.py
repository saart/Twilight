
from typing import List

from scipy import stats

import seaborn
from matplotlib import pylab, pyplot
seaborn.set()
pylab.rcParams.update({
    'figure.dpi': 100,
    'figure.titlesize': 14,
    'axes.labelsize': 24,
    'xtick.labelsize': 18,
    'ytick.labelsize': 18,
    'lines.linewidth': 2,
    'legend.fontsize': 18,
})


def enclave_micro_banchmark_cross_machine_sizes():
    data_1_core = [
        [0.02, 0.04, 0.11, 0.21, 0.58, 1.22, 2.72, 7.04],
        [0.02, 0.04, 0.11, 0.21, 0.54, 1.18, 2.91, 6.78],
        [0.02, 0.06, 0.11, 0.22, 0.59, 1.19, 2.91, 6.73],
        [0.02, 0.05, 0.11, 0.22, 0.6, 1.18, 2.87, 6.3],
        [0.02, 0.05, 0.09, 0.23, 0.58, 1.17, 2.7, 6.44],
        [0.02, 0.05, 0.1, 0.2, 0.58, 1.19, 2.69, 6.33],
        [0.02, 0.06, 0.09, 0.23, 0.58, 1.25, 2.81, 6.29],
        [0.02, 0.06, 0.1, 0.24, 0.58, 1.27, 2.79, 6.66],
        [0.02, 0.05, 0.09, 0.23, 0.55, 1.21, 2.56, 5.55],
        [0.02, 0.05, 0.11, 0.21, 0.53, 1.25, 2.8, 6.63],
    ]
    data_2_cores = [
        [0.02, 0.02, 0.05, 0.11, 0.24, 0.55, 1.06, 2.21],
        [0.02, 0.02, 0.07, 0.11, 0.26, 0.49, 1.03, 2.34],
        [0.02, 0.04, 0.05, 0.12, 0.23, 0.49, 1.1, 2.21],
        [0.02, 0.04, 0.05, 0.13, 0.26, 0.49, 0.99, 2.35],
        [0.02, 0.02, 0.05, 0.1, 0.25, 0.49, 1.0, 1.93],
        [0.02, 0.02, 0.05, 0.13, 0.24, 0.5, 1.0, 2.32],
        [0.02, 0.02, 0.05, 0.1, 0.23, 0.48, 1.0, 2.24],
        [0.02, 0.02, 0.05, 0.1, 0.23, 0.52, 1.08, 2.04],
        [0.02, 0.04, 0.05, 0.1, 0.22, 0.5, 1.07, 2.36],
        [0.02, 0.02, 0.05, 0.13, 0.24, 0.5, 1.08, 2.39],
    ]
    data_4_cores = [
        [0.02, 0.02, 0.03, 0.06, 0.14, 0.25, 0.53, 1.11],
        [0.02, 0.02, 0.06, 0.08, 0.14, 0.25, 0.54, 1.09],
        [0.02, 0.03, 0.03, 0.06, 0.13, 0.25, 0.55, 1.12],
        [0.02, 0.02, 0.03, 0.08, 0.13, 0.24, 0.52, 1.14],
        [0.02, 0.02, 0.03, 0.06, 0.13, 0.25, 0.54, 1.05],
        [0.02, 0.04, 0.03, 0.07, 0.14, 0.26, 0.54, 1.07],
        [0.02, 0.02, 0.04, 0.06, 0.15, 0.25, 0.56, 1.07],
        [0.02, 0.02, 0.03, 0.05, 0.13, 0.24, 0.55, 1.05],
        [0.02, 0.02, 0.05, 0.06, 0.13, 0.25, 0.53, 1.05],
    ]
    x_axis = list(range(len(data_1_core[0])))
    fig, ax = pyplot.subplots()

    def calc_graph(data: List[List[float]]):
        errors = []
        avgs = []
        for i in range(len(data[0])):
            errors.append(stats.sem([l[i] * 1000 for l in data]))
            avgs.append(sum([l[i] * 1000 for l in data]) / len(data))
        return avgs, errors

    avgs, errors = calc_graph(data_1_core)
    ax.errorbar(x_axis, avgs, yerr=errors, label='Standard DC1s_v2 (1 vcpus, 4 GiB memory)')

    avgs, errors = calc_graph(data_2_cores)
    ax.errorbar(x_axis, avgs, yerr=errors, label='Standard DC2s_v2 (2 vcpus, 8 GiB memory)')

    avgs, errors = calc_graph(data_4_cores)
    ax.errorbar(x_axis, avgs, yerr=errors, label='Standard DC4s_v2 (4 vcpus, 16 GiB memory)')

    pyplot.xticks(x_axis, [f"$2^{{{i}}}$" for i in x_axis])
    ax.set_yscale('log')
    ax.set_ylabel('Latency ms (log-scale)')
    ax.set_xlabel('Number of concurrent runs (log-scale)')
    fig.tight_layout()
    pyplot.legend()


def client_enclave_e2e():
    graph_data = {
        'private': {
            4: {1: (0.7225107550621033, 0.04179321338581015), 500: (13.410443517423811, 5.901228409517373), 1000: (21.8208485199733, 11.493287281486815), 1500: (31.151915316019807, 17.754188606252832)},
            5: {1: (0.9672335982322693, 0.04537920961898603), 500: (15.198484653991366, 8.383291333455764), 1000: (25.045440482173827, 16.066440764089478), 1500: (34.920238506460635, 23.271114803510095)},
        },
        'non-private': {
            4: {1: (0.5723422169685364, 0.007057214925726195), 500: (6.79730777134971, 0.5599523533772344), 1000: (12.337687001266378, 3.988313771152257), 1500: (15.845701263937759, 4.595971565708954)},
            5: {1: (0.7724581956863403, 0.0125691873649989), 500: (8.202584006483592, 2.769750343121021), 1000: (13.305270199763013, 6.012300331500526), 1500: (18.423351067995103, 9.069526230104648)},
        }
    }
    fig, ax = pyplot.subplots()
    for label, len_to_data in graph_data.items():
        for route_length, data in len_to_data.items():
            avgs = [t[0] for t in data.values()]
            errs = [t[1] ** 0.5 for t in data.values()]
            ax.errorbar(list(data.keys()), avgs, yerr=errs, marker='.', label=f"{label}, route length = {route_length}")
    ax.set_ylabel('Average latency (seconds)')
    ax.set_xlabel('Number of concurrent payments')
    ax.legend()
    fig.tight_layout()


def client_latency_by_length():
    graph_data = {2: (0.29854758430524997, 0.003228297453214814), 3: (0.46767698764715016, 0.008284758562157076), 4: (0.7060769885296774, 0.003473274517367712), 5: (0.9473503173954387, 0.003943248095593774), 6: (1.1843176726629205, 0.008127859431750324), 7: (1.4212345898048186, 0.011118794303417598), 8: (1.6639732826031302, 0.006372493228362521), 9: (1.897636241708139, 0.0053356222459735175), 10: (2.1750407978612794, 0.014325936642854755)}
    # graph_data = {k: (v[0] - graph_data[2][0], v[1]) for k, v in graph_data.items() if k != 2}
    fig, ax = pyplot.subplots()
    xs = sorted([k for k in graph_data if k != 2])
    ax.errorbar([x - 2 for x in xs], [graph_data[x][0] for x in xs], yerr=[graph_data[x][1] ** 0.5 for x in xs], marker='.', capsize=3, label='Payment latency')
    rtt = 0.085
    ax.plot([x - 2 for x in xs], [(2*(x-1) + 1) * rtt for x in xs], marker='.', label='Network baseline: #Hops $\cdot$ RTT')
    ax.axhline(y=graph_data[2][0], color='green', linestyle='--', label='Setup')
    pyplot.yticks([0, 0.5, 1, 1.5, 2, 2.5])
    pyplot.xticks(list(range(1, 9)))
    ax.set_ylabel('Latency (sec)')
    ax.set_xlabel('# Relays')
    ax.legend()
    fig.tight_layout()


def client_throughput_linear():
    base = (0, 0, 0, 0)
    len3 = {1: (1.0, 0.0, 0.9178947022086695, 0.0517156931819712), 50: (48.973684210526315, 2.8698692626124167, 0.8510822869955026, 0.07254508517313586), 100: (100.05405405405405, 2.5674253161163065, 0.9188142671016769, 0.06365398240326677), 150: (149.78947368421052, 6.199142108460365, 0.9663324534082044, 0.044869755648074085), 200: (200.3421052631579, 5.105602267630672, 0.9930785092491562, 0.03606294776774836), 250: (250.81578947368422, 14.752083284025906, 1.0137274259198965, 0.03938359497662103), 300: (299.2368421052632, 24.876996572109615, 1.0871777287924336, 0.11179876889253265), 350: (343.60526315789474, 17.513212266118295, 1.0564584635575458, 0.05002554563941132), 400: (396.6842105263158, 30.493403310049914, 1.0792876722579121, 0.10344084545873744), 450: (450.8157894736842, 24.116881249839015, 1.1002845605899885, 0.15210827757423215), 500: (492.86842105263156, 27.06636196718178, 1.1288029918607112, 0.10722004497734342), 550: (535.8421052631579, 70.52790650209225, 1.2139074444862823, 0.24498304106824684), 600: (594.8947368421053, 31.971030862398415, 1.097646208492388, 0.1551709192610842), 650: (654.1842105263158, 34.816704447538655, 1.2117235228489234, 0.13770932473926039), 700: (702.2894736842105, 138.574682105988, 1.2600882981097226, 0.3378357909331274), 750: (751.4473684210526, 151.03723789157726, 1.21112510076196, 0.5482632871208835), 800: (780.6578947368421, 92.50157219596737, 1.227681486417688, 0.31114052755996), 850: (814.421052631579, 149.748320714413, 2.8470750048438194, 0.7426172348576576), 900: (806.8684210526316, 154.2392487172942, 4.909155650010361, 1.6606838709475116), 950: (804.3684210526316, 111.94369380057749, 6.381063770988755, 1.6829485533212247), 1000: (796.921052631579, 134.8245217386283, 6.196173870122614, 1.344226897662887), 1050: (812.578947368421, 65.23021239746413, 5.802084261505629, 0.9894091571850333)}
    len4 = {1: (1.0, 0.0, 0.9889473381795382, 0.04805643434179556), 50: (48.55263157894737, 3.3458329811797443, 0.9017692714034426, 0.09397452993455363), 100: (100.55263157894737, 6.426496829209898, 0.9154271721514472, 0.0721234226650685), 150: (148.92105263157896, 8.370944670790774, 0.99461853817417, 0.03412536673686703), 200: (199.6315789473684, 15.747048265813902, 0.9428023480031273, 0.041799361309489365), 250: (245.1315789473684, 18.42362763957365, 1.0244706591593251, 0.03740232307137056), 300: (303.55263157894734, 19.84505422732119, 1.0498654124844276, 0.15579064644994908), 350: (351.6578947368421, 23.109893433662464, 1.1134947349252904, 0.04527525216041114), 400: (398.4736842105263, 25.575210903184793, 1.0572723915586932, 0.037879233521079844), 450: (451.39473684210526, 47.28721840974312, 1.1085969764958172, 0.10043162238564338), 500: (495.2105263157895, 23.031052144461107, 1.1488169819523577, 0.103256970828669805), 550: (528.0263157894736, 83.83645948546595, 1.2110135030932623, 0.31236652847290536), 600: (611.6578947368421, 58.87778435288397, 1.2102155223393123, 0.16911126543173405), 650: (643.0526315789474, 68.27650723670048, 1.1598167241388372, 0.20530344513020585), 700: (690.1578947368421, 42.232144352619585, 1.2333221059911536, 0.04145826685422189), 750: (769.0263157894736, 93.35542913823753, 1.2329724661069414, 0.38058949873060993), 800: (787.578947368421, 172.16571447590033, 1.2490800576367636, 0.3138442337612443), 850: (810.6842105263158, 87.0858938553613, 3.582699954294985, 1.730232064862213), 900: (796.8684210526316, 98.63253734859869, 4.971426718424811, 1.5485769691464886), 950: (802.078947368421, 71.52562352013857, 6.044782890474193, 1.2700974015014483), 1000: (798.9736842105264, 76.679952379699, 5.96213023318476, 1.1528843115098049), 1050: (809.4473684210526, 64.05495065645674, 5.47589359903562, 0.9881378907937468)}
    len5 = {1: (1.0, 0.0, 0.8827026403272474, 0.04037986012860822), 50: (49.26315789473684, 1.9958405500903726, 0.9054648298902025, 0.0892244716200751), 100: (98.73684210526316, 6.846759550582326, 0.9237634109727111, 0.07055257944191776), 150: (148.3684210526316, 7.572182653535515, 0.9603942840785183, 0.034619294139200174), 200: (198.81578947368422, 11.366745734257348, 0.9732446228151687, 0.06683566463717859), 250: (247.28947368421052, 15.452657572041812, 0.9298209488218908, 0.04033025993599848), 300: (296.57894736842104, 23.236350355409414, 1.0200552942747487, 0.047519976210190565), 350: (345.57894736842104, 15.601335264965671, 0.9636585716997422, 0.026802232107626982), 400: (400.9736842105263, 25.492503379069227, 0.9507386774567198, 0.020235206065044725), 450: (448.63157894736844, 35.391361607803304, 1.0130403321862172, 0.16073673939475847), 500: (495.3421052631579, 43.57526840560478, 1.037530613425146, 0.19394399339354934), 550: (528.8157894736842, 71.87227533074794, 0.9983025223689261, 0.3087553126821563), 600: (599.3157894736842, 50.67393457616413, 1.0740201863658186, 0.16257114759015887), 650: (641.3421052631579, 80.61907711930141, 1.0586424348679026, 0.2247842207614506), 700: (695.6578947368421, 130.58175021918152, 1.0619949906280885, 0.41800307087076116), 750: (755.6052631578947, 118.28323266716168, 1.068147063386884, 0.4326240345656293), 800: (795.7105263157895, 80.4719329608767, 1.0960852972609149, 0.28285171980526626), 850: (804.5263157894736, 85.35737159980145, 4.967762975110663, 1.6547351450142034), 900: (797.3421052631579, 93.6961147079074, 5.508130580078062, 1.4610463799982873), 950: (817.1315789473684, 77.50014297189922, 4.244668231041798, 0.8333939153981048), 1000: (798.6315789473684, 64.71574324554045, 6.191286854179227, 1.3633382479000702), 1050: (796.9473684210526, 108.4854943901478, 6.669299475723163, 1.2825658951045817)}
    len6 = {1: (1.0, 0.0, 0.9347368572887621, 0.05485560064103992), 50: (50.0, 2.5235730725761796, 0.9176380021443419, 0.08135907506595617), 100: (99.36842105263158, 4.498075919836104, 0.9231831088979865, 0.07448968658390169), 150: (148.1578947368421, 8.276556351620597, 0.9757710660642855, 0.04086659804199854), 200: (200.8421052631579, 11.476580995982241, 1.0168796778133624, 0.047021871017225075), 250: (249.39473684210526, 12.451039850221369, 1.0237169866633755, 0.044612155056158606), 300: (295.0263157894737, 19.564316123339484, 0.9967545196524765, 0.053672833910630255), 350: (346.13157894736844, 14.299744297735165, 1.035854875938819, 0.026674797883999804), 400: (406.6842105263158, 30.071935914401806, 1.0130583222579893, 0.02355966603251669), 450: (442.7368421052632, 24.110146597958902, 1.0309335351108554, 0.14655277501), 500: (497.5263157894737, 54.15656486526393, 1.0150401356825757, 0.13501488344052366), 550: (546.4736842105264, 41.33479281371698, 1.0590355423774235, 0.15709169502504014), 600: (600.1842105263158, 25.54444554224933, 1.0671697651625024, 0.14313745518891141), 650: (636.7631578947369, 42.22897122924417, 1.0742542614318635, 0.145926604137942556), 700: (705.0, 63.85633546444212, 1.0457608093664116, 0.2486947985085309), 750: (750.078947368421, 164.04610737917673, 1.0806094379993313, 0.4096295625664139), 800: (786.2368421052631, 74.65726397151124, 1.0958117422922393, 0.45994817938342861), 850: (824.5526315789474, 120.22844425868725, 2.7393742633104448, 0.6447548077302256), 900: (811.1052631578947, 58.9101856413572, 4.449336151835791, 1.2300225392856199), 950: (812.078947368421, 73.78324641491146, 4.371875040568081, 0.6845956007296277), 1000: (804.8421052631579, 74.10999162546008, 4.795238381351054, 0.5509334296835363), 1050: (793.6052631578947, 69.28907389894061, 4.175755749065326, 0.37757590453168677)}
    graph_data = {
        1: len3,
        2: len4,
        3: len5,
        4: len6,
    }

    fig, ax = pyplot.subplots()
    xs = sorted(list(len3.keys()))
    for length in graph_data:
        ax.errorbar(xs, [graph_data[length].get(x, base)[0] for x in xs], yerr=[graph_data[length].get(x, base)[1] for x in xs], marker='.', capsize=3, label=f'{length} Relay' + ('s' if length > 1 else ''))
    pyplot.yticks([0, 300, 600, 900, 1200])
    ax.set_ylabel('Resolved Payments/s')
    ax.set_xlabel('Issued payments/s')
    fig.tight_layout()
    pyplot.legend()
    fig.savefig(r'C:\Users\user\Downloads\throughput_pcn.pdf', format='pdf')

    fig, ax = pyplot.subplots()
    xs = sorted(list(len3.keys()))
    max_x = 850
    xs = [x for x in xs if x < max_x]
    base_latency = 0.29854758430524997
    latency = {2: (0.29854758430524997, 0.003228297453214814), 3: (0.46767698764715016, 0.008284758562157076),
                  4: (0.7060769885296774, 0.003473274517367712), 5: (0.9473503173954387, 0.003943248095593774),
                  6: (1.1843176726629205, 0.008127859431750324), 7: (1.4212345898048186, 0.011118794303417598),
                  8: (1.6639732826031302, 0.006372493228362521), 9: (1.897636241708139, 0.0053356222459735175),
                  10: (2.1750407978612794, 0.014325936642854755)}
    for length in graph_data:
        ratio = latency[length+2][0] / graph_data[length][1][2]
        comp_latency = lambda x: graph_data[length].get(x, base)[2] * ratio - base_latency
        ax.errorbar(xs, [comp_latency(x) for x in xs], yerr=[graph_data[length].get(x, base)[3] for x in xs], marker='.', capsize=3, label=f'{length} Relay' + ('s' if length > 1 else ''))

    # ax.vlines(max_x + 20, -10, 10, color="grey", linestyles="dashed", linewidth=2.8)
    ax.set_ylim((-0.1, 2))
    pyplot.yticks([0, 0.5, 1, 1.5])
    ax.set_ylabel('Latency (sec)')
    ax.set_xlabel('Issued payments/s')
    fig.tight_layout()
    pyplot.legend()
    fig.savefig(r'C:\Users\user\Downloads\latency_pcn.pdf', format='pdf')


def client_throughput_x():
    graph_data = {1: {'1': (0.9875, 0.0484122918275927, 1.2796622874836125, 0.1988847599951223), '2': (0.9625, 0.07806247497997995, 0.938302161792914, 0.17945879370705492)}, 100: {'1': (99.7375, 4.336311076249027, 1.1072887149853359, 0.29219112575815237), '2': (99.4125, 5.286051811134658, 1.1305248290210919, 0.27449559280738245)}, 175: {'1': (168.4375, 5.982565816604112, 0.8531525336260026, 0.02111155159902679), '2': (166.3375, 5.576162995286272, 1.1069289653625718, 0.03552963805364309)}, 250: {'1': (239.3125, 8.867347052529297, 1.110511834959497, 0.04844779427982392), '2': (236.625, 9.915360558244968, 1.0743557359322145, 0.09320521231554353)}, 325: {'1': (302.9625, 67.35552014311818, 1.0736874873444988, 0.21741769200315647), '2': (281.525, 84.92151891599678, 1.109415184812316, 0.13722498033743674)}, 400: {'1': (350.4125, 81.78094120117474, 1.2754018322421614, 0.029264252876166713), '2': (372.2875, 95.50075834122994, 1.3207550087164344, 0.15057645756847854)}, 475: {'1': (393.625, 66.11084914747352, 1.2046868042476377, 0.5677728486876008), '2': (375.2875, 68.3289092826016, 1.3978541872277066, 0.46377435195084293)}, 550: {'1': (355.625, 68.61748592742232, 2.6903385928084584, 0.6315873564565645), '2': (353.1, 84.89213744511325, 2.881422136451827, 0.2374352803787845)}}

    fig, ax = pyplot.subplots()
    xs = sorted(list(graph_data.keys()))
    ax.errorbar(xs, [graph_data[x]["1"][0] for x in xs], yerr=[graph_data[x]["1"][1] for x in xs], marker='.', capsize=3, label=f'Path 1')
    ax.errorbar(xs, [graph_data[x]["2"][0] for x in xs], yerr=[graph_data[x]["2"][1] for x in xs], marker='.', capsize=3, label=f'Path 2')
    ax.errorbar(xs, [graph_data[x]["1"][0] + graph_data[x]["2"][0] for x in xs],
                yerr=[(graph_data[x]["1"][1] ** 2 + graph_data[x]["2"][1] ** 2) ** 0.5 for x in xs], marker='.', capsize=3, label=f'Total')
    pyplot.yticks([0, 200, 400, 600, 800])
    ax.set_ylabel('Resolved Payments/s')
    ax.set_xlabel('Issued payments/s')
    fig.tight_layout()
    pyplot.legend()


def client_throughput_dynamic_x():
    pylab.rcParams.update({
        'figure.figsize': (7, 6),
        'figure.titlesize': 14,
        'axes.labelsize': 22,
        'xtick.labelsize': 18,
        'ytick.labelsize': 18,
        'lines.linewidth': 2,
        'legend.fontsize': 16,
    })

    increase_data = [
        {'1': ([458.0, 157.0, 319.0, 302.0, 319.0, 321.0, 301.0, 323.0, 374.0, 246.0, 425.0, 356.0, 283.0, 326.0, 102.0, 319.0, 131.0, 110.0, 178.0, 97.0, 125.0, 136.0, 117.0, 116.0, 136.0], [1.891777506561779, 2.324830718860505, 2.844408047984013, 3.3679550151951267, 4.099986707155233, 4.605616609626841, 5.400461002045692, 5.9373829910998746, 6.923052055950471, 7.797950926834975, 8.732057945588055, 9.598241512025341, 10.656857758444527, 11.63369730206355, 14.086934596884484, 15.319874952579367, 15.736354154484873, 16.693414036239066, 15.60874257462748, 14.204452610507454, 12.252587326049804, 10.891896288184558, 9.628783183220106, 8.034564628683288, 6.9842599577763504]), '2': ([331.0, 404.0, 312.0, 210.0, 324.0, 315.0, 340.0, 426.0, 288.0, 261.0, 275.0, 217.0, 279.0, 416.0, 423.0, 738.0, 732.0, 601.0, 622.0, 588.0, 586.0, 682.0, 661.0, 561.0, 618.0], [1.7292592727165568, 2.315785562638009, 2.9035443503123064, 3.5663904303596135, 4.0421743878611816, 4.751468842370169, 5.474989259944243, 6.342150053507845, 7.7275514412257404, 8.973424755293747, 10.49008396842263, 11.728496218606624, 14.159021880037042, 15.332595171263584, 16.341886276894428, 15.903423836883814, 14.03149732689445, 11.911730773434668, 10.1563478819427, 8.216396103117988, 7.1977710337362195, 6.072560346371268, 4.041891968359929, 2.082434245821839, 0.4874679865449239])},
        {'1': ([331.0, 292.0, 228.0, 388.0, 468.0, 272.0, 254.0, 233.0, 201.0, 378.0, 325.0, 335.0, 284.0, 470.0, 428.0, 136.0, 124.0, 155.0, 136.0, 135.0, 135.0, 137.0, 137.0, 128.0, 135.0], [0.8907147181358223, 1.604029021851004, 2.4341641758617603, 2.988853282535199, 3.975778655618684, 4.963825608001036, 5.751851251492133, 8.156679327395853, 11.673074753826889, 12.640002416463998, 13.973747091150996, 16.462509662332668, 17.726094678107728, 18.6971667069141, 18.702659931252985, 17.309380986998157, 16.21760580770431, 14.48280287139556, 13.043839442288434, 11.765089142764056, 10.521076374680456, 8.94519878651974, 7.067811535671353, 5.495535730432581]), '2': ([340.0, 364.0, 428.0, 283.0, 360.0, 327.0, 319.0, 441.0, 420.0, 376.0, 266.0, 430.0, 500.0, 442.0, 637.0, 733.0, 705.0, 705.0, 682.0, 516.0, 812.0, 526.0, 535.0, 574.0, 623.0], [0.9193686695659862, 1.7389191736231793, 2.6388321641449615, 3.52949962851858, 4.807088494300842, 6.137638062147555, 8.703713298965024, 10.642884824281376, 12.168922327245985, 13.177957479624038, 16.062525649716083, 17.699951715247575, 18.851969253063203, 17.54636266818299, 15.820829907616416, 13.994421575111712, 12.412724541433109, 10.367334978631202, 8.513529350883083, 5.631736250810845, 1.649401985659388, 1.84542677516029, 0.5791138230083145, 0.6578763879301176, 0.8166412940825695])},
        {'1': ([278.0, 429.0, 444.0, 368.0, 446.0, 354.0, 380.0, 314.0, 358.0, 296.0, 371.0, 328.0, 347.0, 245.0, 424.0, 199.0, 176.0, 117.0, 129.0, 19.0, 156.0, 112.0, 139.0, 136.0, 136.0], [1.1446652035061404, 1.752695844445751, 2.300748542622403, 3.0656986256008563, 3.8292388012590965, 4.622241744213858, 5.569171869754792, 6.559454404624405, 7.551209005563619, 8.876613974571228, 10.110436526912885, 11.534109540828844, 12.910051007779256, 15.026467776785092, 16.224361489403922, 16.779297527955404, 17.562003785822572, 16.77595870107667, 15.334326415098914, 14.078408843592593, 14.610183618007563, 13.589034035801888, 12.315694045677459, 10.519833568264456, 8.721637133289786]), '2': ([482.0, 421.0, 253.0, 486.0, 250.0, 362.0, 294.0, 421.0, 345.0, 314.0, 316.0, 358.0, 410.0, 315.0, 430.0, 479.0, 649.0, 636.0, 503.0, 728.0, 685.0, 653.0, 639.0, 619.0, 652.0], [0.918794987607299, 1.8065897206512596, 2.4930653100899556, 3.151489620836674, 3.953007417678833, 4.670092014976628, 5.701063125311923, 6.680383359451475, 7.636836093405019, 8.754721881477696, 10.000064821182926, 11.308517486689476, 12.848880317734508, 15.028838848689245, 16.154003320183865, 17.319113336176862, 17.061416172283273, 15.438783888921797, 14.108317720079885, 14.330265782364123, 12.944001450851886, 10.785839702978553, 8.835660404378249, 7.084781638770177, 4.905861890696465])},
        {'1': ([451.0, 354.0, 395.0, 314.0, 427.0, 414.0, 414.0, 319.0, 385.0, 315.0, 322.0, 311.0, 309.0, 320.0, 459.0, 474.0, 156.0, 135.0, 136.0, 137.0, 136.0, 93.0, 116.0, 116.0, 116.0], [1.024320346024507, 1.7315870584067652, 2.199794364880912, 2.9558027041186192, 3.8183820956763954, 4.693633780387288, 5.847217063397025, 6.918982946013209, 8.003324470891581, 9.458875026400127, 10.694732118837582, 12.005285351989354, 13.412530965403832, 14.701596470177174, 15.259401732800054, 15.647261034084272, 14.391562408361679, 12.778033798712272, 11.27137796142522, 9.930321503729715, 8.137813946780037, 6.656576407852993, 5.20042825361778, 3.6648468724612533, 2.6822387165036696]), '2': ([407.0, 435.0, 377.0, 384.0, 317.0, 490.0, 333.0, 393.0, 348.0, 307.0, 341.0, 316.0, 344.0, 378.0, 385.0, 401.0, 547.0, 540.0, 566.0, 735.0, 692.0, 669.0, 660.0, 623.0, 640.0], [1.0558157998162347, 1.5331621734575294, 2.227018847073421, 2.906555760651827, 3.7274227322840163, 4.3912389638472575, 5.5123219948273166, 6.143839938039998, 7.148412694876221, 8.013517303653183, 9.192393499385576, 10.228053148034252, 11.297105896611546, 12.625484414832302, 13.659250965366116, 14.616690868748691, 15.114193003716352, 15.571759844380756, 14.545520068478668, 13.259561526369886, 11.47091659231682, 9.853066664640144, 7.383473858394121, 5.578439997439562, 3.570408453490283])}
    ]

    decrease_data = [
        {'1': ([81.0, 104.0, 98.0, 117.0, 119.0, 79.0, 98.0, 120.0, 78.0, 100.0, 97.0, 119.0, 105.0, 80.0, 97.0, 96.0, 374.0, 363.0, 321.0, 278.0, 315.0, 328.0, 246.0, 306.0, 351.0], [0.6571093223713063, 0.8202469990803645, 0.6795629116953635, 0.7170985947307359, 0.5320619274588192, 0.5557683570475518, 0.5986786496882536, 0.3520140906174978, 0.5874572564394046, 0.3670741868019104, 0.41618810978132426, 0.6870491444563666, 0.3744727429889497, 0.31756039559841154, 0.3062455973674342, 0.37375427037477493, 1.644232283301532, 2.8367230261652923, 4.163495955808883, 6.850546544561019, 9.050670016001142, 10.608985264126847, 12.464001423944303, 14.82405073580399, 16.256714290363497]), '2': ([514.0, 647.0, 681.0, 840.0, 593.0, 726.0, 546.0, 760.0, 696.0, 680.0, 639.0, 632.0, 636.0, 447.0, 373.0, 380.0, 392.0, 269.0, 324.0, 392.0, 285.0, 408.0, 301.0, 381.0, 130.0], [0.905708946142679, 0.8455153447583065, 0.8459352753761056, 0.6799177376996903, 0.6611875092601294, 0.5780261580937494, 0.6383119655616117, 0.562919039788999, 0.6412666960694324, 0.6432963956804837, 0.5016337720814259, 0.5154366885559468, 0.5243491200531054, 1.1047659048298062, 2.4629210748237833, 3.7181743326940033, 6.114591811384473, 8.168573372426087, 9.669660397829153, 11.234654435089656, 14.151129783166422, 15.831754997080447, 19.974384668305163, 22.54981807928819])},
        {'1': ([141.0, 120.0, 99.0, 79.0, 99.0, 118.0, 99.0, 97.0, 98.0, 99.0, 98.0, 99.0, 99.0, 98.0, 98.0, 99.0, 99.0, 78.0, 282.0, 338.0, 258.0, 385.0, 375.0, 210.0, 334.0], [0.7555854979981768, 0.691949588060379, 0.5863745140306877, 0.6141113842589946, 0.6007453720979016, 0.6840659137499534, 0.6185279277840046, 0.5872738803784872, 0.6416234507852671, 0.5977744574498649, 0.6085658851934939, 0.5961916856091432, 0.5903602272573144, 0.5815605119783052, 0.5707952392344572, 0.5623985926310221, 0.55818042369804, 0.5492039918899536, 1.3962572162032973, 2.4202503255133094, 3.6250384380651073, 4.745976461683001, 5.999910294214884, 7.71314324537913, 9.219472514655061]), '2': ([785.0, 629.0, 500.0, 753.0, 629.0, 679.0, 713.0, 507.0, 602.0, 632.0, 624.0, 737.0, 415.0, 354.0, 400.0, 401.0, 429.0, 358.0, 425.0, 488.0, 393.0, 469.0, 393.0, 400.0, 379.0], [0.7229350172030697, 0.48245777234743054, 0.48457753229141237, 0.6656917658143467, 0.47599608644203467, 0.6162453322768738, 0.49282494734915244, 0.6162836626906837, 0.45874431877833266, 0.5141475898555562, 0.5748074562885822, 0.6286908486804936, 1.994195978900036, 3.931724464825991, 5.8147363728284835, 7.549921652919931, 9.036380404914732, 10.489054077830394, 13.203044594596413, 14.811747164022727, 17.35803652295023, 19.08998496954375, 20.39296973691945, 22.018919486403465, 23.45237158156322])},
        {'1': ([81.0, 99.0, 98.0, 118.0, 79.0, 118.0, 99.0, 90.0, 89.0, 125.0, 102.0, 95.0, 99.0, 117.0, 94.0, 97.0, 104.0, 63.0, 200.0, 287.0, 333.0, 317.0, 325.0, 320.0, 334.0], [0.42187823778317296, 0.5984204537940748, 0.5565480966957248, 0.45218447103338727, 0.5905677849733377, 0.642019132436332, 0.587461440250127, 0.6413662830988566, 0.5119983078388686, 0.5800288848876953, 0.338188229822645, 0.32170860390914113, 0.34038789103729555, 0.42626553111606175, 0.32561905333336366, 0.29646172720132413, 0.3267937715236957, 0.34374234789893743, 1.3594444572925568, 2.405355735938308, 4.0830871171063485, 5.517104761081539, 6.996060638427735, 8.67592174857855, 10.262533003698566]), '2': ([634.0, 796.0, 642.0, 578.0, 484.0, 609.0, 746.0, 627.0, 612.0, 642.0, 636.0, 376.0, 335.0, 390.0, 419.0, 374.0, 398.0, 360.0, 308.0, 424.0, 250.0, 435.0, 254.0, 378.0, 378.0], [0.7355654886468351, 0.6332140235445607, 0.7019027322994957, 0.6726416064793675, 0.6504648805906376, 0.5249724435101589, 0.638738608871644, 0.46266288886610213, 0.47364315877552904, 0.4664575760238267, 0.5310867432528322, 1.5324560010686834, 3.1330266155413726, 4.715598636407119, 6.922487495622658, 8.67661624031271, 10.585584264304769, 12.114838730626635, 14.161103163446699, 15.617848320389694, 17.25991181373596, 18.849036996117952, 20.26017373096286, 22.282327100713417, 23.746039718547195])},
        {'1': ([62.0, 78.0, 120.0, 118.0, 98.0, 81.0, 99.0, 79.0, 118.0, 98.0, 80.0, 99.0, 98.0, 100.0, 99.0, 87.0, 39.0, 478.0, 307.0, 325.0, 249.0, 310.0, 322.0, 394.0, 361.0], [0.6472644652089765, 1.044681231180827, 0.7288588742415111, 0.78628509731616, 0.5282676000984348, 0.5947093757582299, 0.5895635672289916, 0.47609648221655737, 0.67749502093105, 0.46224243786870217, 0.587003481388092, 0.6301570107238461, 0.6426818784402342, 0.6310646986961365, 0.6253585767264318, 0.48201932852295626, 0.6521949584667499, 1.5948131503420395, 2.38860489413482, 3.564090834397536, 4.59729239643817, 6.583963046535369, 8.493471767591393, 9.591472225745923, 10.550206143439972]), '2': ([740.0, 667.0, 869.0, 640.0, 539.0, 594.0, 523.0, 604.0, 632.0, 635.0, 525.0, 744.0, 639.0, 408.0, 435.0, 285.0, 478.0, 299.0, 254.0, 257.0, 383.0, 418.0, 359.0, 444.0, 385.0], [0.9108685074625789, 0.9040747092760306, 0.5767574845304149, 0.6173392735421658, 0.5976312651483823, 0.5365370411664148, 0.5875401186897468, 0.5658147583734121, 0.5742075190513949, 0.54159527763607, 0.5727970454806374, 0.631774922211965, 0.46472737412310916, 1.6174469794712814, 3.3917026481409183, 7.122320906387712, 9.455031230696866, 10.73743876509779, 12.241682267838415, 13.905667057859057, 15.514003508969358, 17.24563338099084, 18.718001075693078, 20.314021156979845])},
        {'1': ([102.0, 119.0, 118.0, 92.0, 73.0, 79.0, 119.0, 99.0, 117.0, 97.0, 117.0, 113.0, 102.0, 26.0, 125.0, 94.0, 135.0, 116.0, 341.0, 348.0, 372.0, 309.0, 358.0, 278.0, 308.0], [0.692572179962607, 0.5944837301719088, 0.6865815510184078, 0.5112707226172738, 0.6167488424745324, 0.7081056274945223, 0.36153629246880026, 0.5986823024171771, 0.5069506677806886, 0.5916302646558309, 0.5466969339256613, 0.42798830344613675, 0.31911104566910686, 0.31849601635566127, 1.981178913116455, 1.5959877536651936, 1.302246920267741, 0.7777003974750124, 1.4130689971957389, 2.195748220229971, 3.2058172828407696, 4.22032072783288, 6.416934099277305, 8.256575403588542, 9.486934784944955]), '2': ([765.0, 478.0, 843.0, 442.0, 501.0, 741.0, 627.0, 707.0, 623.0, 537.0, 628.0, 537.0, 394.0, 398.0, 243.0, 256.0, 422.0, 429.0, 392.0, 255.0, 406.0, 365.0, 385.0, 431.0, 447.0], [0.8278372368781395, 0.7771267117815537, 0.5762263501100552, 0.6532058591756346, 0.6897184525183337, 0.6368083184869022, 0.5102979764223479, 0.5880988878441666, 0.5223679764504227, 1.8480027144468283, 1.6866235152400773, 0.9096365352360674, 2.3470111068735267, 3.898437107627715, 7.147698205194356, 9.64051422290504, 11.56174940464056, 14.494775891581893, 16.507134356669017, 17.858518132296474, 20.031194740915534, 21.850750765081955, 23.538713546232742, 25.22666970095889, 27.07924636258375])},
        {'1': ([114.0, 90.0, 98.0, 139.0, 100.0, 78.0, 99.0, 135.0, 82.0, 119.0, 90.0, 102.0, 81.0, 39.0, 121.0, 100.0, 407.0, 315.0, 379.0, 319.0, 376.0, 280.0, 346.0, 313.0, 387.0], [0.762088838376497, 0.5168783134884305, 0.6200492138765297, 0.5683573801740468, 0.3134542155265808, 0.32521056823241407, 0.584842193006265, 0.5750095438074183, 0.6825002024813396, 0.3913218253800849, 0.5788339243994819, 0.35476260091744216, 0.34930991537776995, 2.0816774368286133, 1.6681118976971334, 1.1249368834495543, 1.2876730949345618, 2.531474585003323, 3.89180504866829, 5.617652326542008, 7.142651416519855, 8.618759964860004, 10.856404091581444, 13.488779855612368, 15.466280143082296]), '2': ([675.0, 766.0, 558.0, 604.0, 681.0, 465.0, 579.0, 754.0, 695.0, 553.0, 638.0, 662.0, 324.0, 378.0, 384.0, 401.0, 340.0, 382.0, 247.0, 302.0, 352.0, 482.0, 450.0, 589.0, 470.0], [0.7919369185412372, 0.6226590221295469, 0.6371117197911799, 0.5653783860585547, 0.5917695240827384, 0.7040972964404381, 0.49761438410928627, 0.630242003370027, 0.570447681619109, 0.5731278040663527, 1.9689364714351127, 1.2247032136741898, 1.455864150583008, 3.246834053564324, 4.901198972016573, 6.823383059584886, 8.491164671673495, 10.491275924662645, 13.224701897627643, 14.630684575497709, 16.232904720035467, 18.259122359307476, 20.26115820672777, 21.423276381095924, 22.893231103268075])},
        {'1': ([107.0, 111.0, 100.0, 138.0, 99.0, 101.0, 97.0, 79.0, 98.0, 82.0, 119.0, 99.0, 79.0, 109.0, 94.0, 117.0, 91.0, 492.0, 375.0, 330.0, 380.0, 305.0, 290.0, 426.0, 404.0], [0.8030117850437343, 0.7882877147949494, 0.6474105191230773, 0.6237913180088651, 0.5048322990687206, 0.6781385959965167, 0.6004513342355945, 0.5054389404345162, 0.7042605998564739, 0.5525567647887439, 0.6299765230226917, 0.5613282786475288, 0.5928887385356275, 0.637034567124253, 0.5710486959903798, 0.39893375910245454, 0.3420948196243454, 0.8468748699358808, 1.7744396413167318, 2.5999857541286584, 3.778413822776393, 5.99187397644168, 7.707903867721558, 8.947650377179535, 10.360397101038753]), '2': ([620.0, 569.0, 799.0, 543.0, 486.0, 572.0, 515.0, 568.0, 711.0, 591.0, 686.0, 617.0, 331.0, 381.0, 459.0, 370.0, 406.0, 381.0, 352.0, 431.0, 464.0, 412.0, 408.0, 558.0, 454.0], [1.026189241486211, 0.6536205866634321, 0.6624273680924474, 0.5157567954195138, 0.5993306381712235, 0.4927298930975107, 0.621530269882054, 0.6120191145111138, 0.60779239423835, 0.6430787580267427, 0.46917884655666076, 0.4535477567144113, 1.4039435199380281, 2.831903701066345, 4.162717927255402, 6.473776887558602, 8.519604657083896, 9.911155770769895, 12.10436248169704, 14.452041963966707, 16.466195638837487, 18.62661750397636, 20.908730101936005, 22.502481174298083, 24.459125845442784])}
    ]
    decrease_data[0]['1'] = (decrease_data[0]['1'][0][3:-2], [])
    decrease_data[1]['1'] = (decrease_data[1]['1'][0][5:], [])
    decrease_data[2]['1'] = (decrease_data[2]['1'][0][5:], [])
    decrease_data[3]['1'] = (decrease_data[3]['1'][0][4:-1], [])
    decrease_data[4]['1'] = (decrease_data[4]['1'][0][5:], [])
    decrease_data[5]['1'] = (decrease_data[5]['1'][0][3:-2], [])
    decrease_data[6]['1'] = (decrease_data[6]['1'][0][4:-1], [])
    for data in decrease_data:
        data['2'] = (data['2'][0][:-5], [])

    graph_data = [{"1": (inc["1"][0][4:-5] + dec["1"][0][5:], []), "2": (inc["2"][0][4:-5] + dec["2"][0][5:], [])} for inc, dec in zip(increase_data, decrease_data)]

    fig = pyplot.figure()
    subplot1 = fig.add_subplot(211)
    subplot2 = fig.add_subplot(212)

    xs = list(range(len(graph_data[0]["1"][0])))
    subplot1.plot(xs, [600 if x < 11 else 100 if x < 23 else 600 for x in xs], color='b', label="Route 1")
    subplot1.plot(xs, [600 for _ in xs], color='r', label="Route 2")
    subplot1.set_ylabel('Issued Payments/s')
    subplot1.set_xlabel('Time (sec)')
    subplot1.set_yticks([0, 300, 600])
    subplot1.legend()

    for index, data in enumerate(graph_data):
        subplot2.plot(xs, data["1"][0], color='b')
        subplot2.plot(xs, data["2"][0], color='r')
    subplot2.set_ylabel('Resolved Payments/s')
    subplot2.set_xlabel('Time (sec)')
    subplot2.set_yticks([0, 300, 600])
    fig.tight_layout()


def enclave_micro_benchmark():
    graph_data = {0: (0.48073681195576984, 0.01996600932193108), 50: (0.5294073422749838, 0.03377178811103446), 100: (0.5569674968719482, 0.014349330588631623), 150: (0.5873395601908366, 0.022193308183162428), 200: (0.605208158493042, 0.012000319086141246), 250: (0.6434662342071533, 0.03570324937111468), 300: (0.6619448661804199, 0.016838233476640676), 350: (0.7284391721089681, 0.027797487402899203), 400: (0.7930942376454672, 0.029784709278500094), 450: (0.8345982233683268, 0.02544395307400034), 500: (0.8865311940511068, 0.037997778352202666), 550: (0.8900825182596842, 0.03321506355573868), 600: (0.9140697320302328, 0.01699202784142707), 650: (0.9750739733378092, 0.03909938168772213), 700: (0.9794445037841797, 0.033263969199827506), 750: (1.0383044878641765, 0.02220621496826144), 800: (1.085720380147298, 0.03176488564342209), 850: (1.1342677275339763, 0.10460110557913557), 900: (1.1354358990987141, 0.028707014709275322), 950: (1.1776782671610515, 0.037683136643703534), 1000: (1.2009956041971843, 0.03283781194751238), 1050: (1.2556714216868083, 0.037445415668387015), 1100: (1.3464476267496746, 0.054487799508834096), 1150: (1.3439021905263264, 0.03961716828562809), 1200: (1.37803053855896, 0.03844905422461104), 1250: (1.4352153937021892, 0.04140237014519011), 1300: (1.508472998936971, 0.08279771860022284), 1350: (1.5108654499053955, 0.046131081806819504), 1400: (1.5321412086486816, 0.021959118726114703), 1450: (1.6200007597605388, 0.0786567507306046), 1500: (1.6171270211537678, 0.04564973606381501)}
    fig, ax = pyplot.subplots()
    xs = sorted(list(graph_data.keys()))
    ax.errorbar(xs, [graph_data[x][0] / 1000 for x in xs], yerr=[graph_data[x][1] / 1000 for x in xs], marker='.', capsize=3)
    pyplot.yticks([0, 0.0005, 0.001, 0.0015, 0.002], ['0', '0.0005', '0.0010', '0.0015', '0.0020'])
    ax.set_ylabel('Time (sec)')
    ax.set_xlabel('# unresolved PTLCs')
    fig.tight_layout()


def client_lightning_throughput():

    data = {
        6: [(417.04336332624166, 86.51729794643373, 1.7480088339230948), (406.2859014094451, 89.2683593918307, 1.8420888757734581), (407.1598231540911, 70.83984164331875, 2.704406617124713), (423.96539999706584, 57.059244926909194, 1.00776812586445), (0, 0, 0), (418.62507341261386, 136.9014569894102, 2.6744674848469447)],
        9: [(417.82984333843217, 88.57608307853955, 0.9831723979226304), (431.20338983050846, 108.45327684319251, 1.0305632657541062), (429.18215564969586, 96.6668704426801, 1.1746702643941578), (0, 0, 0), (838.1072447807562, 142.26674602203988, 1.039289996082639), (424.9024593679232, 91.35720617296234, 0.8410907121882657), (0, 0, 0), (435.4534741869484, 58.086797982683585, 0.6991707590918963), (424.40726396263005, 120.14389167574991, 0.8787890013737063)],
        13: [(403.73416705710207, 128.39404031807123, 1.6137395616858627), (848.9491525423729, 149.41605724708876, 1.5988943475948472), (0, 0, 0), (420.01682052097624, 71.43637762383234, 1.2697693235835028), (0, 0, 0), (398.5612680538432, 115.96720653063937, 2.2620369040393076), (409.8981800169948, 99.41363638253874, 2.283712588532495), (0, 0, 0), (407.4283867218346, 101.4580865842311, 1.908582324470285), (424.39478632692413, 55.792762455801245, 0.6752662594210256), (432.7510173590885, 59.360042542620725, 1.3241379563396827), (409.01667253661213, 119.78961885519318, 2.8707786371362616), (400.39350282224797, 92.21229963794651, 5.395447794607322)],
        16: [(635.7733180005537, 214.42896315580566, 8.370968029609424), (432.7259114657185, 60.828600129790914, 11.90696664560024), (409.9067003430449, 80.94902793713425, 8.611248566694686), (443.0664391630826, 80.67804403638121, 0.7239991460294586), (431.58606654896272, 53.41411589136901, 14.514476486055232), (625.3105051799557, 128.896044063567, 8.390942130397004), (0, 0, 0), (410.10219437520203, 58.18260238229481, 8.48874230883303), (0, 0, 0), (0, 0, 0), (395.20804707004197, 51.010478327642346, 10.916530777715053), (827.9512457930108, 150.17672056671222, 0.7085419263104262), (0, 0, 0), (0, 0, 0), (395.9500251867858, 98.8176305101577, 0.7425469577000694), (435.69269540283298, 43.85730449011604, 27.028547612667204)],
        19: [(422.9902719970225, 60.29311639983525, 1.0660246975681749), (1008.285227569481, 151.88504870766417, 6.29110645094873), (0, 0, 0), (434.42090906340695, 54.16456900112184, 0.8752951120815567), (435.68514160294325, 84.1066929008942, 0.8876930559942565), (0, 0, 0), (344.43018456559878, 49.1740419327108, 10.91315971541953), (424.12914241140805, 62.68388881336061, 7.819577984341163), (0, 0, 0), (428.7715154250605, 88.26668863973823, 1.0951517171179268), (442.3465022634576, 116.30561951213726, 0.8484859312240678), (0, 0, 0), (426.27176553247796, 70.76691538971802, 7.918174025140852), (0, 0, 0), (0, 0, 0), (828.4160447162393, 121.65755236549198, 1.1011886566402915), (0, 0, 0), (824.9024593679232, 91.35720617296234, 0.8410907121882657), (0, 0, 0)],
        22: [(436.23485549856569, 52.23829539880526, 35.456713998508285), (435.607491063522, 103.53371758883463, 2.40847781434029), (415.75696819087455, 132.83217891423013, 0.8276513603768533), (393.11973050160896, 69.25478539489048, 3.2426351158686018), (421.6360611071039, 165.9296550233599, 0.8119322069657162), (414.9094590741215, 90.72058295071945, 0.8429102189983236), (413.74174880467115, 96.5866768741139, 1.6932943394865978), (423.400250857028038, 56.37593064026132, 32.00885611458268), (0, 0, 0), (0, 0, 0), (841.0079194952284, 209.0310043055786, 0.7732881717501077), (424.843292992188992, 62.853168840825624, 34.667064718682795), (437.9684730641846, 69.57520910656484, 2.426310945684044), (0, 0, 0), (432.2830672489591, 72.85372930715059, 0.6744773199077257), (414.36567137369747, 69.52495892713377, 2.05686668967904), (0, 0, 0), (0, 0, 0), (0, 0, 0), (409.8981800169948, 99.41363638253874, 2.283712588532495), (0, 0, 0), (395.9500251867858, 98.8176305101577, 0.7425469577000694)],
        24: [(680.33758282332862, 147.4419848241636, 16.02881558447868), (0, 0, 0), (0, 0, 0), (401.81039986049537, 49.6285908079205, 29.668469754364388), (410.5233424147349, 107.04649306464557, 6.19606928730906), (0, 0, 0), (855.3134416122672, 169.58056474798948, 1.1721699872136144), (643.4353746714522, 390.8967007762595, 10.617059524633884), (405.03496580685965, 78.17999598171106, 5.803059524035367), (402.3088507223261, 78.29926924821076, 0.49546577768239347), (0, 0, 0), (0, 0, 0), (434.74590565098566, 79.84802045881372, 0.9979623282071456), (440.708287717500426, 179.62983853673524, 16.217161432830743), (434.6938778307009, 59.22566127639805, 0.70350754763793), (0, 0, 0), (0, 0, 0), (0, 0, 0), (833.4353746714522, 390.8967007762595, 10.617059524633884), (0, 0, 0), (0, 0, 0), (0, 0, 0), (824.40726396263005, 120.14389167574991, 0.8787890013737063), (432.7510173590885, 59.360042542620725, 1.3241379563396827)]
    }

    graph_data = {}
    for size, alices in data.items():
        graph_data[size] = {
            "throughput": sum(alice[0] for alice in alices),
            "throughput_std": sum(alice[1] ** 2 for alice in alices) ** 0.5,
            "latency": (sum(alice[2] ** 2 for alice in alices)/ len(alices)) ** 0.5,
        }

    fig, ax = pyplot.subplots()
    ax.errorbar(list(graph_data), [d["throughput"] for d in graph_data.values()], yerr=[d["throughput_std"] for d in graph_data.values()], marker='.', capsize=3)
    pyplot.yticks([0, 2000, 4000, 6000, 8000])
    ax.set_ylabel('Resolved Payments/s')
    ax.set_xlabel('Topology Size')
    fig.tight_layout()


if __name__ == "__main__":
    # client_latency_by_length()
    client_throughput_linear()
    # client_throughput_x()
    # client_throughput_dynamic_x()
    # enclave_micro_benchmark()
    # client_lightning_throughput()
    pyplot.show()

# ping time "North Europe" to "East US": [86.8, 84.5, 84.6, 85.0, 84.8, 84.6, 85.0, 85.0, 84.5, 84.6, 84.5, 84.8, 84.9]
